{"version":3,"sources":["components/layouts/Header.js","components/Todoitem.js","components/Todos.js","components/AddTodo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["Header","style","styleHeader","to","Component","background","color","padding","textAlign","Todoitem","getStyle","textDecoration","props","todo","completed","borderBottom","markComplete","e","console","log","this","id","title","type","onChange","bind","onClick","delTodo","btnStyle","border","borderRadius","cursor","float","outline","Todos","todos","filter","sort","a","b","toLowerCase","map","key","AddTodo","state","setState","target","name","value","onSubmit","preventDefault","Addtodo","display","placeholder","flex","className","About","Fragment","App","NewTodos","updateTodos","newTodo","uuidv4","newTodos","localStorage","setItem","JSON","stringify","getItem","parse","path","render","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5e36e8d6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Header extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<header style={styleHeader}>\n\t\t\t\t<h1>ToDoList</h1>\n\n\t\t\t\t<Link to=\"/\"> Home </Link>\n\t\t\t\t|\n\t\t\t\t<Link to=\"/about\"> About </Link>\n\t\t\t</header>\n\t\t);\n\t}\n}\n\nconst styleHeader = {\n\tbackground: '#000',\n\tcolor: '#fff',\n\tpadding: '10px',\n\ttextAlign: 'center'\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass Todoitem extends Component {\n\tgetStyle = () => {\n\t\treturn {\n\t\t\ttextDecoration: this.props.todo.completed ? 'line-through' : 'none',\n\t\t\tbackground: '#f4f4f4',\n\t\t\tpadding: '10px',\n\t\t\tborderBottom: '1px #ccc dotted'\n\t\t}\n\t}\n\n\tmarkComplete = (e) => {\n\t\tconsole.log(this.props);\n\t}\n\n\trender() {\n\t\tconst { id, title } = this.props.todo;\n\t\treturn (\n\t\t\t<div style={this.getStyle()}>\n\t\t\t\t<input type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)} />\n\t\t\t\t{title}\n\t\t\t\t<button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>x</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// PropTypes\nTodoitem.propTypes = {\n\ttodo: PropTypes.object.isRequired\n}\n\nconst btnStyle = {\n\tbackground: '#ff0000',\n\tcolor: '#fff',\n\tborder: 'none',\n\tpadding: '5px 9px',\n\tborderRadius: '50%',\n\tcursor: 'pointer',\n\tfloat: 'right',\n\toutline: 'none'\n}\n\nexport default Todoitem;","import React, { Component } from 'react';\nimport Todoitem from './Todoitem';\nimport PropTypes from 'prop-types';\n\nclass Todos extends Component {\n\trender() {\n\t\treturn this.props.todos\n\t\t.filter(todo => todo.id !== null)\n\t\t.sort((a, b) => a.title.toLowerCase() !== b.title.toLowerCase() ? a.title.toLowerCase() < b.title.toLowerCase() ? -1 : 1 : 0)\n\t\t.map((todo) => (\n\t\t\t<Todoitem key={todo.id} todo={todo} delTodo={this.props.delTodo} markComplete={this.props.markComplete} />\n\t\t));\n\t}\n}\n\n// PropTypes\nTodos.propTypes = {\n\ttodos: PropTypes.array.isRequired\n}\n\nexport default Todos;\n","import React, { Component } from 'react';\n\nexport class AddTodo extends Component {\n\tstate = {\n\t\ttitle: ''\n\t}\n\n\tonChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n\tonSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tthis.props.Addtodo(this.state.title);\n\t\tthis.setState({ title: '' });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<form \n\t\t\t\tonSubmit={this.onSubmit} \n\t\t\t\tstyle={{ display: 'flex' }}\n\t\t\t\t>\n\t\t\t\t<input \n\t\t\t\ttype=\"text\" \n\t\t\t\tname=\"title\" \n\t\t\t\tplaceholder=\"Add Todo...\" \n\t\t\t\tstyle={{ flex: '10', padding: '5px' }} \n\t\t\t\tvalue={this.state.title} \n\t\t\t\tonChange={this.onChange}\n\t\t\t\t/>\n\t\t\t\t<input type=\"submit\" value=\"Submit\" className=\"btn\" style={{ flex: '1' }} />\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default AddTodo;\n","import React, { Component } from 'react';\n\nexport default class About extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<h1>About</h1>\n\t\t\t\t<p>This is the ToDoList v1.0.0. It is part of a react crash course </p>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n\nimport Header from './components/layouts/Header';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    todos: []\n  }\n\n  componentDidMount() {\n    let todos = null;\n\n    if ( localStorage.getItem('todos') === null ) {\n      todos = [\n        {\n          id: null,\n          title: 'placeholder',\n          completed: true\n        },\n        {\n          id: 1,\n          title: 'Set up meeting',\n          completed: false\n        },\n        {\n          id: 2,\n          title: 'Do grooceries',\n          completed: false\n        },\n        {\n          id: 3,\n          title: 'Take out trash',\n          completed: false\n        }\n      ];\n      localStorage.setItem('todos', JSON.stringify(todos));\n    } else {\n      todos = JSON.parse(localStorage.getItem('todos'));\n    }\n\n    this.setState({ todos: todos });\n  }\n\n  markComplete = (id) => {\n    this.setState({ todos: this.state.todos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    }) })\n  }\n\n  delTodo = (id) => {\n    const NewTodos = [...this.state.todos.filter(todo => todo.id !== id)];\n\n    this.updateTodos(NewTodos);\n  }\n\n  Addtodo = (title) => {\n    const newTodo = {\n      id: uuidv4(),\n      title,\n      completed: false\n    }\n\n    const newTodos = [...this.state.todos, newTodo]\n    .sort((a, b) => a.title.toLowerCase() !== b.title.toLowerCase() ? a.title.toLowerCase() < b.title.toLowerCase() ? -1 : 1 : 0);\n\n    this.updateTodos(newTodos);\n  }\n\n  updateTodos = (todos) => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n    this.setState({ todos: todos });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route  path=\"/react-todolist\" render={props => (\n              <React.Fragment>\n                <AddTodo Addtodo={this.Addtodo} />\n                <Todos todos={this.state.todos} delTodo={this.delTodo} markComplete={this.markComplete} />\n              </React.Fragment>\n            )} />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}